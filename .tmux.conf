#================================================
# misc
#================================================

set -g default-shell $SHELL

# ### prefix
set -g status-position top
#
# # vim <=> tmux 間でクリップボード利用を可能にする
set-option -g default-command "reattach-to-user-namespace -l $SHELL"
#
# # Vi キーバインド
set-window-option -g mode-keys vi
#
# # Prefix+v でコピーモード開始
bind-key v copy-mode \; display "Copy mode!"
bind-key -t vi-copy v begin-selection
#
# # Prefix+Enter/y でコピー
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -t vi-copy y     copy-pipe "reattach-to-user-namespace pbcopy"
#
unbind C-b
set-option -g prefix C-t

#---------------------------
# set-window-options(= setw)
#---------------------------

# コマンド名で自動 rename
setw -g automatic-rename on

#-------------------
# set-options(= set)
#-------------------

# mouse で選択
set -g mouse on

# ESCキーを押した後にの遅延を無くす
set -s escape-time 0

# 256 色表示
set -g default-terminal "xterm-256color"

# 最初の pane の index を 1 に
set -g pane-base-index 1

# window の 最初の index を 1 に
set -g base-index 1

# 全てのベルを無視
set -g bell-action none

# window 履歴で保持される行数
set -g history-limit 50000

# display-panes で数字が表示されるインターバル
set -g display-panes-time 5000

## 描画間隔
set -g status-interval 5
## ウインドウリストの位置
set -g status-justify left
## ** using powerline **
### カラー
set -g status-fg colour231
set -g status-bg colour234
### 左部分
set -g status-left-length 20
set -qg status-left '#{?client_prefix,#[fg=colour254]#[bold],#[fg=colour16]#[bg=colour254]#[bold]} #S #{?client_prefix,#[fg=colour31]#[bg=colour234]#[nobold],#[fg=colour254]#[bg=colour234]#[nobold]}'
### 右部分
set -g status-right-length 150
set -g status-right "  #[fg=green] 彩羽 #[default]  #[fg=green] %Y-%m-%d(%a) %H:%M #[default] #[fg=green,bg=black]#(tmux-mem-cpu-load --powerline-right --interval 2)#[default]"
### ウインドウ
set -g window-status-format "#[fg=colour244,bg=colour234]  #I #[fg=colour240]  #[default]#W "
set -g window-status-current-format "#[fg=colour234,bg=colour31] #[fg=colour117,bg=colour31]#I #[fg=colour231,bold] #W #[fg=colour31,bg=colour234,nobold]"

#------------
# key-bindings
#------------

#================================================
# appearance
# ================================================

# status barの色
# set -g status-fg white
# set -g status-bg default

# 選択範囲の色
set -g mode-fg colour231
set -g mode-bg colour212

# windowの色
set -g window-status-fg cyan
set -g window-status-bg default
set -g window-status-attr dim

# アクティブなwindowを目立たせる
set -g window-status-current-fg white
set -g window-status-current-bg cyan
set -g window-status-current-attr bright

# pane borderの色
set -g pane-border-fg white
set -g pane-border-bg default

# アクティブなpaneを目立たせる
set -g pane-active-border-fg yellow
set -g pane-active-border-bg default

# command lineの色
set -g message-fg white
set -g message-bg black
set -g message-attr bright

bind c new-window -c "#{pane_current_path}"

# リフレッシュ
bind R refresh-client

# pane を水平分割
bind - split-window -vc "#{pane_current_path}"

# pane を垂直分割
bind \ split-window -hc "#{pane_current_path}"

# 番号が振られた pane に飛ぶ
bind i display-panes

# pane のリサイズ
bind -r H resize-pane -L 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 1

# pane の終了
bind k kill-pane

# window の終了
bind K kill-window

# C-q を二回押すと nest された tmux に command を送る
bind C-q send-prefix

set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'irb pry "~rails server" "~rails console"'

run-shell '~/.tmux/plugins/tpm/tpm'
#tmux <-> vim 間の移動をシームレスに
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

