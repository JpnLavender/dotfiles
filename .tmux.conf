#================================================
# misc
#================================================
# Prefix+v でコピーモード開始
bind-key v copy-mode \; display "Copy mode!"
#bind -t vi-copy C-v rectangle-toggle
# bind-key -t copy-mode-vi Enter copy-pipe "cat | xsel -i"
bind-key -T copy-mode-vi enter send -X copy-pipe-and-cancel "cat | xsel -i --clipboard"

#---------------------------
# set-window-options(= setw)
#---------------------------

# コマンド名で自動 rename
setw -g automatic-rename on

#-------------------
# set-options(= set)
#-------------------

# prefixをデフォルトのbからtに
unbind C-b
set-option -g prefix C-t

# tmuxを起動した際最初に入るshell
set -g default-shell $SHELL

#　ステータスバーを上部に
set -g status-position top

# Vi キーバインド
set-window-option -g mode-keys vi


# mouseを使えるように
set -g mouse on

# ESCキーを押した後にの遅延を無くす
set -s escape-time 0

# 256 色表示
set -g default-terminal "xterm-256color"

# 最初の pane の index を 1 に
set -g pane-base-index 1

# window の 最初の index を 1 に
set -g base-index 1

# 全てのベルを無視
set -g bell-action none

# window 履歴で保持される行数
set -g history-limit 50000

# display-panes で数字が表示されるインターバル
set -g display-panes-time 5000

# 描画間隔
set -g status-interval 5

# ウインドウリストの位置
set -g status-justify left

# ** using powerline **
## カラー
set -g status-fg colour231
set -g status-bg colour234

# set-option -g default-terminal screen-256color
# set -g terminal-overrides 'xterm:colors=256'
# run-shell "powerline-daemon -q"
# source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

# ステータスラインの設定 {{{
set-option -g status-interval 2
set-option -g status-justify "left"
set-option -g status-left-length 60
set-option -g status-right-length 90

set-window-option -g window-status-current-format "#[fg=colour235, bg=colour199] #[fg=colour255, bg=colour199] #I  #W #[fg=colour199, bg=colour16]"
set-option -g status-left "#(~/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/tmux-powerline/powerline.sh right)"
# }}

#================================================
# appearance
# ================================================
#
# 選択範囲の色
set -g mode-fg colour231
set -g mode-bg colour212

# windowの色
set -g window-status-fg cyan
set -g window-status-bg default
set -g window-status-attr dim

# アクティブなwindowを目立たせる
set -g window-status-current-fg white
set -g window-status-current-bg cyan
set -g window-status-current-attr bright

# pane borderの色
set -g pane-border-fg white
set -g pane-border-bg default

# アクティブなpaneを目立たせる
set -g pane-active-border-fg yellow
set -g pane-active-border-bg default

# command lineの色
set -g message-fg white
set -g message-bg black
set -g message-attr bright

bind c new-window -c "#{pane_current_path}"

# リフレッシュ
bind R refresh-client

# pane を水平分割
bind - split-window -vc "#{pane_current_path}"

# pane を垂直分割
bind \ split-window -hc "#{pane_current_path}"

# 番号が振られた pane に飛ぶ
bind i display-panes

# pane のリサイズ
bind -r H resize-pane -L 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 1

# pane の終了
bind k kill-pane

# window の終了
bind K kill-window

# C-q を二回押すと nest された tmux に command を送る
bind C-q send-prefix

set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'irb pry "~rails server" "~rails console"'

run-shell '~/.tmux/plugins/tpm/tpm'
#tmux <-> vim 間の移動をシームレスに
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l""

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

